@using Common
@using MudBlazor
@using System.Linq

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="_searchTerm" 
                     Label="Search" 
                     Variant="Variant.Outlined"
                     Immediate="true"
                     DebounceInterval="300"
                     OnDebounceIntervalElapsed="SearchPersons"
                     Class="mb-4" />

        <MudList Dense="true" DisableGutters="true">
            @foreach (var person in _filteredPersons)
            {
                <MudListItem OnClick="() => SelectPerson(person)" Clickable="true">
                    <div class="d-flex align-center">
                        <MudText>@person.FullName (@person.PassportSeria @person.PassportNumber)</MudText>
                    </div>
                </MudListItem>
            }
        </MudList>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<PersonDto> Persons { get; set; } = new();

    private List<PersonDto> _filteredPersons;
    private string _searchTerm = "";

    protected override void OnInitialized()
    {
        _filteredPersons = Persons;
    }

    private void SearchPersons()
    {
        if (string.IsNullOrWhiteSpace(_searchTerm))
        {
            _filteredPersons = Persons;
        }
        else
        {
            _filteredPersons = Persons.Where(p =>
                p.FullName.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase) ||
                p.PassportSeria.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase) ||
                p.PassportNumber.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }

    private void SelectPerson(PersonDto person)
    {
        MudDialog.Close(DialogResult.Ok(person));
    }

    private void Cancel() => MudDialog.Cancel();
}